"""add supervisor_id to users

Revision ID: d5fed7afe023
Revises: 
Create Date: 2025-06-02 10:14:58.665401

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd5fed7afe023'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_reports_id', table_name='reports')
    op.drop_table('reports')
    op.add_column('evaluations', sa.Column('report_ready_for_generation', sa.Boolean(), nullable=True))
    op.add_column('evaluations', sa.Column('report_generated_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('supervisor_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'users', 'users', ['supervisor_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_column('users', 'supervisor_id')
    op.drop_column('evaluations', 'report_generated_at')
    op.drop_column('evaluations', 'report_ready_for_generation')
    op.create_table('reports',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('evaluation_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('report_type', postgresql.ENUM('ETR', 'TRP', 'VTR', name='reporttype'), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('template_version', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_draft', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_approved', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('approved_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('approval_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('file_path', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], name='reports_approved_by_fkey'),
    sa.ForeignKeyConstraint(['evaluation_id'], ['evaluations.id'], name='reports_evaluation_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='reports_pkey')
    )
    op.create_index('ix_reports_id', 'reports', ['id'], unique=False)
    # ### end Alembic commands ###
